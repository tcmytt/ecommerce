Áp dụng mạng tích chập (CNN) và DenseNet201 vào xây dựng mô hình bán trái cây tự động dựa trên thị giác máy tính
12348888

- Quan hệ OneToMany
mappedBy đứng trên list (Ví dụ cart có nhiều cartDetail(list) thì cart là thằng cầm mappedBy), 
thằng cartDetail cầm cartId và trên nó là JoinColumn, owning side là cartDetail, cart là inverse side
Khi thêm/xoá phần tử bên chủ động(owning side) JPA sẽ cập nhập bảng bị động(inverse side)

- Quan hệ ManyToMany
Dùng joinTable viết bên chủ động ví dụ role và permission thì viết bên role
Bên còn lại dùng mappedBy
Khi thêm/xoá phần tử bên chủ động JPA sẽ cập nhập bảng trung gian

@JsonIgnore là một annotation của Jackson, được sử dụng để được dùng để kiểm soát việc bỏ qua (ignore) 
một thuộc tính cụ thể khi chuyển đổi đối tượng Java thành JSON (serialization) hoặc ngược lại (deserialization).
+ Ngăn chặn lặp vô hạn (Infinite Recursion) trong mối quan hệ hai chiều
+ Dùng trước thông tin nhạy cảm như password hay token để nó không chuyển từ java obj thành phản hồi json
+ Ngăn chặn deserialize không mong muốn (Dùng trước id để id chỉ được tự động tăng trong cơ sở dữ liệu mà ko dc gán từ json)



- Sinh key jwt base 64 : node -e "console.log(require('crypto').randomBytes(64).toString('base64'));"
Header: Chứa thông tin về thuật toán mã hóa và loại token
Payload: Chứa thông tin người dùng và các claim (yêu cầu)
Signature: Được tạo bằng cách mã hóa Header và Payload với một secret key.
+ Nếu nội dung của Header hoặc Payload bị thay đổi, chữ ký sẽ không còn hợp lệ, giúp phát hiện việc giả mạo.

Cách lấy ảnh : http://localhost:8080/upload/products/abc123_image.jpg
<img
    src={`http://localhost:8080${product.mainImage}`}
    alt={product.name}
    style={{ width: "150px", height: "150px", objectFit: "cover" }}
/>

Câu lệnh clean và build
./gradlew clean build

git reset --soft
--soft : Quay lại trạng thái trước commit, nhưng giữ lại tất cả các thay đổi trong staging area (tức là các file đã được thêm vào git add

git reset --soft HEAD~2
HEAD~2: Chỉ định quay lại 2 commit trước





